import './polyfills.server.mjs';
import{b as d,d as c,h as i,l as u}from"./chunk-UBIDB7VR.mjs";import{a as s,b as n}from"./chunk-S6KH3LOX.mjs";var h=class p{projects=[];projectsSubject=new d([]);projects$=this.projectsSubject.asObservable();constructor(){let t=localStorage.getItem("projects");t&&(this.projects=JSON.parse(t),this.projectsSubject.next(this.projects))}saveToLocalStorage(){localStorage.setItem("projects",JSON.stringify(this.projects))}getProjects(){return this.projects$}getProjectById(t){let e=this.projects.find(r=>r.id===t);return c(e).pipe(i(500))}createProject(t){let e=n(s({},t),{id:Math.floor(Math.random()*1e3),createdAt:new Date,updatedAt:new Date,tasks:[]});return this.projects.push(e),this.projectsSubject.next(this.projects),this.saveToLocalStorage(),c(e).pipe(i(500))}updateProject(t,e){let r=this.projects.findIndex(o=>o.id===t);if(r===-1)throw new Error("Project not found");return this.projects[r]=n(s(s({},this.projects[r]),e),{updatedAt:new Date}),this.projectsSubject.next(this.projects),this.saveToLocalStorage(),c(this.projects[r]).pipe(i(500))}addTask(t,e){let r=this.projects.find(a=>a.id===t);if(!r)throw new Error("Project not found");let o=n(s({},e),{id:Math.floor(Math.random()*1e3),projectId:t,createdAt:new Date,updatedAt:new Date});return r.tasks.push(o),this.projectsSubject.next(this.projects),this.saveToLocalStorage(),c(o).pipe(i(500))}updateTask(t,e,r){let o=this.projects.find(j=>j.id===t);if(!o)throw new Error("Project not found");let a=o.tasks.findIndex(j=>j.id===e);if(a===-1)throw new Error("Task not found");return o.tasks[a]=n(s(s({},o.tasks[a]),r),{updatedAt:new Date}),this.projectsSubject.next(this.projects),this.saveToLocalStorage(),c(o.tasks[a]).pipe(i(500))}static \u0275fac=function(e){return new(e||p)};static \u0275prov=u({token:p,factory:p.\u0275fac,providedIn:"root"})};export{h as a};
